{
  // Place your 02_04e workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "AI service configuration": {
    "prefix": "sk01",
    "body": [
      "var modelDeploymentName = \"Gpt4v32k\";",
      "var azureOpenAIEndpoint = Environment.GetEnvironmentVariable(\"AZUREOPENAI_ENDPOINT\");",
      "var azureOpenAIKey = Environment.GetEnvironmentVariable(\"AZUREOPENAI_APIKEY\");"
    ],
    "description": "adds the configuration for the AI service"
  },
  "sk02": {
    "scope": "csharp",
    "prefix": "sk02",
    "body": [
      "var topic = \"The Semantic Kernel SDK has been born and is out to the world on December 19th, now all .NET developers are AI developers...\";"
    ]
  },
  "sk03": {
    "scope": "csharp",
    "prefix": "sk03",
    "body": [
      "var prompt = \\$\"Generate a very short funny poem about the given event. Be creative and be funny. Make the words ryhme together. Let your imagination run wild. Event:{topic}\";"
    ]
  }
}