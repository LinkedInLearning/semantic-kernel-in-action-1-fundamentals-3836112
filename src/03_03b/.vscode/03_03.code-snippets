{
  // Place your 03_03e workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "sk01": {
    "prefix": "sk01",
    "body": [
      "{",
      "    \"schema\": 1,",
      "    \"description\": \"Summarize given text or any text document\",",
      "    \"execution_settings\": {",
      "      \"default\": {",
      "        \"max_tokens\": 512,",
      "        \"temperature\": 0.0,",
      "        \"top_p\": 0.0,",
      "        \"presence_penalty\": 0.0,",
      "        \"frequency_penalty\": 0.0",
      "      }",
      "    },",
      "    \"input_variables\": [",
      "      {",
      "        \"name\": \"input\",",
      "        \"description\": \"Text to summarize\",",
      "        \"default\": \"\",",
      "        \"is_required\": true",
      "      }",
      "    ]",
      "  }"
    ]
  },
  "sk02": {
    "prefix": "sk02",
    "body": [
      "[SUMMARIZATION RULES]",
      "DONT WASTE WORDS",
      "USE SHORT, CLEAR, COMPLETE SENTENCES.",
      "DO NOT USE BULLET POINTS OR DASHES.",
      "USE ACTIVE VOICE.",
      "MAXIMIZE DETAIL, MEANING",
      "FOCUS ON THE CONTENT",
      "",
      "[BANNED PHRASES]",
      "This article",
      "This document",
      "This page",
      "This material",
      "[END LIST]",
      "",
      "Summarize:",
      "Hello how are you?",
      "+++++",
      "Hello",
      "",
      "Summarize this",
      "{{$input}}",
      "+++++"
    ]
  },
  "sk03": {
    "prefix": "sk03",
    "body": [
      "<ItemGroup>",
      "<Content Include=\"plugins\\**\\*.*\">",
      "  <CopyToOutputDirectory>Always</CopyToOutputDirectory>",
      "</Content>",
      "</ItemGroup>"
    ]
  },
  "sk04": {
    "scope": "csharp",
    "prefix": "sk04",
    "body": [
      "private static string someText = \"Effective prompt design is essential to achieving desired outcomes with LLM AI models. Prompt engineering, also known as prompt design, is an emerging field that requires creativity and attention to detail. It involves selecting the right words, phrases, symbols, and formats that guide the model in generating high-quality and relevant texts.\\r\\n\\r\\nIf you've already experimented with ChatGPT, you can see how the model's behavior changes dramatically based on the inputs you provide. For example, the following prompts produce very different outputs:\";"
    ]
  },
  "sk05": {
    "scope": "csharp",
    "prefix": "sk05",
    "body": [
      "var modelDeploymentName = \"Gpt4v32k\";",
      "var azureOpenAIEndpoint = Environment.GetEnvironmentVariable(\"AZUREOPENAI_ENDPOINT\");",
      "var azureOpenAIApiKey = Environment.GetEnvironmentVariable(\"AZUREOPENAI_APIKEY\");"
    ]
  },
  "sk06": {
    "scope": "csharp",
    "prefix": "sk06",
    "body": [
      "var builder = Kernel.CreateBuilder();",
      "builder.Services.AddAzureOpenAIChatCompletion(",
      "    modelDeploymentName,",
      "    azureOpenAIEndpoint,",
      "    azureOpenAIApiKey,",
      "    modelId: \"gpt-4-32k\"",
      ");",
      "var kernel = builder.Build();"
    ]
  }
}